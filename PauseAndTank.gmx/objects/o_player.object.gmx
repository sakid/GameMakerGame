<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_edges</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>s_playercol</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=x;
y=y;
z=0;

dir=0;
face_dir=0;

/*target_dir=dir;
target_z=z;
target_x=x;
target_y=y;*/

spd=2;

smin=0;
smax=0;

attacking=false;
cooldown=0;

camera=instance_create(x,y,o_camera);

    /*var tempface=0; //Cout for sprites being weird
    var tempcamera=0;
    repeat (8)
    {
        repeat (8)
        {
            show_debug_message("face_dir: "+string(tempface)+"   camera_dir: "+string(tempcamera)+"   end result: "+string((((tempcamera-tempface)+270)%360)/45));
            tempcamera+=45;
        }
        tempface+=45;
        tempcamera=0;
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !control.pause {
//Set direction away from camera
dir=(o_camera.dir_face+180)%360; //Direction away from camera

//Movement
var xspd = 0;
var yspd = 0;
var movedir=-1;

if control.controltype!=-1{
    xspd=gamepad_axis_value(control.controltype,gp_axislh);
    yspd=gamepad_axis_value(control.controltype,gp_axislv);
}
else{
    if keyboard_check(ord('W')) yspd--; // Move forward
    if keyboard_check(ord('S')) yspd++; //Move backwards
    if keyboard_check(ord('D')) xspd++; //Strafe right
    if keyboard_check(ord('A')) xspd--; //Strafe left
}

if (xspd!=0 or yspd!=0) movedir = dir+((point_direction(0,0,xspd,yspd)+270)%360);

if (mouse_check_button_pressed(mb_left) and cooldown==0) { attacking=true; cooldown=room_speed; }
if cooldown&gt;0 {cooldown--;}
else {attacking=false;}

//Collisions
if (movedir!=-1 and cooldown==0){
    if lengthdir_y(1,movedir)!=0 {
        if (place_meeting(x,y+lengthdir_y(spd,movedir),parent_solid)){
            if lengthdir_y(1,movedir)&gt;0 {
                while(!place_meeting(x,y+1,parent_solid)){
                    y++;
                }
            }
            else if lengthdir_y(1,movedir)&lt;0 {
                while(!place_meeting(x,y-1,parent_solid)){
                    y--;
                }
            }
        }
        else y+=lengthdir_y(spd,movedir);
    }
    if lengthdir_x(1,movedir)!=0 {
        if (place_meeting(x+lengthdir_x(spd,movedir),y,parent_solid)){
            if lengthdir_x(1,movedir)&gt;0 {
                while(!place_meeting(x+1,y,parent_solid)){
                    x++;
                }
            }
            else if lengthdir_x(1,movedir)&lt;0 {
                while(!place_meeting(x-1,y,parent_solid)){
                    x--;
                }
            }
        }
        else x+=lengthdir_x(spd,movedir);
    }

//Sprites
    sprite_index=s_edgew;
    image_speed=(8/room_speed);
    face_dir=movedir%360;
    smin=(((dir-face_dir+270)%360)/45)*6;
    smax=smin+5;
    if (image_index&gt;(smax+1) or image_index&lt;smin) { image_index=smin; }
    
}
else{
    sprite_index=s_edges;
    image_speed=0;
    image_index= (((dir-face_dir)+300)%360)/45;
        
}

//x= lerp(x,target_x, .1);
//y= lerp(y,target_y, .1);
}
else image_speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var player_tex = sprite_get_texture(s_player,0);
//d3d_draw_cylinder(x-8,y-8,z, x+8,y+8,z+8,player_tex,1,1,true,12);

d3d_transform_set_identity();
d3d_transform_add_rotation_x(90);
d3d_transform_add_rotation_z(point_direction(x, y, o_camera.x,o_camera.y)+90);
d3d_transform_add_translation(x, y, z);
//
draw_sprite_ext(sprite_index, -1, 0, 0, 1, 1, 0, c_white, 1);
if attacking==true {
    d3d_transform_add_translation(0, 0, z+48);
    draw_set_color(c_red);
    draw_circle(0,0,4,true);
    
    draw_set_color(c_white);
    
}
//
d3d_transform_set_identity();

if attacking==false {
    d3d_transform_set_identity();
    draw_set_color(c_red);    
    d3d_transform_add_translation(x, y, z+1);
    draw_rectangle(lengthdir_x(16,face_dir+90),lengthdir_y(16,face_dir+90),
        lengthdir_x(16,face_dir-90)+lengthdir_x(32,face_dir),lengthdir_y(16,face_dir-90)+lengthdir_y(32,face_dir),true);
    draw_set_color(c_white);
    d3d_transform_set_identity();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
