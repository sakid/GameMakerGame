<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playercol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z=64;

dir_face=0;

length=192;

target_x=o_player.x+lengthdir_x(length,dir_face);
target_y=o_player.y+lengthdir_y(length,dir_face);

draw_set_color(c_white);
d3d_start();

d3d_set_fog(true,make_color_rgb(27,3,59),0,512);
d3d_set_hidden(true);

draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !control.pause {

    if control.controltype!=-1{
        dir_face-=gamepad_button_value(control.controltype,gp_shoulderrb)*2;
        dir_face+=gamepad_button_value(control.controltype,gp_shoulderlb)*2;
    }
    else{
        if keyboard_check(ord('D')) dir_face-=1;
        if keyboard_check(ord('A')) dir_face+=1;
    }
    
if (dir_face&lt;0) dir_face=359;
dir_face= dir_face%360;

if collision_line(o_player.x,o_player.y,o_player.x+lengthdir_x(length,dir_face),o_player.y+lengthdir_y(length,dir_face),parent_wall,false,true){
    show_debug_message("solid");
    var testlength=192;
    while (collision_line(o_player.x,o_player.y,o_player.x+lengthdir_x(testlength,dir_face),o_player.y+lengthdir_y(testlength,dir_face),parent_wall,false,true)){
        testlength--;
        if testlength&lt;0{show_debug_message("infinite loop"); testlength=192; break; }
    }
    target_x = o_player.x+lengthdir_x(testlength-4,dir_face);
    target_y = o_player.y+lengthdir_y(testlength-4,dir_face);
}
else{
    target_x = o_player.x+lengthdir_x(length,dir_face);
    target_y = o_player.y+lengthdir_y(length,dir_face);
}

/*//This makes blocks in the triangle from the left and right side of the screen to the player translucent. Disabled for now
//https://www.reddit.com/r/gamemaker/comments/31d4qx/detecting_multiple_collisions/
var cnum, ID, num;
num = instance_number(o_wall);
if(collision_line(x,y,o_player.x,o_player.y,o_wall,false,true)){
    for(cnum = 0; cnum &lt;= num; cnum += 1){
        ID = instance_find(o_wall, cnum);
        if(rectangle_in_triangle(ID.x,ID.y,ID.x+sprite_width,ID.y+sprite_height,
        o_player.x,o_player.y,
        o_camera.x+lengthdir_x(view_wview[view_current]/2,dir_face+90),o_camera.y+lengthdir_y(view_wview[view_current]/2,dir_face+90),
        o_camera.x+lengthdir_x(view_wview[view_current]/2,dir_face-90),o_camera.y+lengthdir_y(view_wview[view_current]/2,dir_face-90))!=0){
            ID.transp=.25;
        }
    }
}*/
}

x=lerp(x,target_x,.25);
y=lerp(y,target_y,.25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_projection(x,y,z+o_player.z, o_player.x,o_player.y,o_player.z, 0,0,1);
draw_set_color(c_red);
draw_triangle(o_player.x,o_player.y,lengthdir_x(view_wview[view_current]/2,dir_face+90),lengthdir_y(view_wview[view_current]/2,dir_face+90),lengthdir_x(view_wview[view_current]/2,dir_face+450),lengthdir_y(view_wview[view_current]/2,dir_face+450),true);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
